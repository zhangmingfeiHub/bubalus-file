<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shuhang.file.mapper.FileInfoMapper">
  <resultMap id="BaseResultMap" type="com.shuhang.file.model.FileInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="origin_name" jdbcType="VARCHAR" property="originName" />
    <result column="transfer_name" jdbcType="VARCHAR" property="transferName" />
    <result column="suffix" jdbcType="VARCHAR" property="suffix" />
    <result column="size" jdbcType="INTEGER" property="size" />
    <result column="from_source" jdbcType="VARCHAR" property="fromSource" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_operator" jdbcType="VARCHAR" property="createOperator" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_operator" jdbcType="VARCHAR" property="updateOperator" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, origin_name, transfer_name, suffix, `size`, from_source, `path`, url, create_date, 
    create_operator, update_date, update_operator
  </sql>
  <select id="selectByExample" parameterType="com.shuhang.file.model.FileInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from file_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from file_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from file_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.shuhang.file.model.FileInfo" useGeneratedKeys="true">
    insert into file_info (origin_name, transfer_name, suffix, 
      `size`, from_source, `path`, 
      url, create_date, create_operator, 
      update_date, update_operator)
    values (#{originName,jdbcType=VARCHAR}, #{transferName,jdbcType=VARCHAR}, #{suffix,jdbcType=VARCHAR}, 
      #{size,jdbcType=INTEGER}, #{fromSource,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{createOperator,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{updateOperator,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.shuhang.file.model.FileInfo" useGeneratedKeys="true">
    insert into file_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="originName != null">
        origin_name,
      </if>
      <if test="transferName != null">
        transfer_name,
      </if>
      <if test="suffix != null">
        suffix,
      </if>
      <if test="size != null">
        `size`,
      </if>
      <if test="fromSource != null">
        from_source,
      </if>
      <if test="path != null">
        `path`,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createOperator != null">
        create_operator,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateOperator != null">
        update_operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="originName != null">
        #{originName,jdbcType=VARCHAR},
      </if>
      <if test="transferName != null">
        #{transferName,jdbcType=VARCHAR},
      </if>
      <if test="suffix != null">
        #{suffix,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=INTEGER},
      </if>
      <if test="fromSource != null">
        #{fromSource,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createOperator != null">
        #{createOperator,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateOperator != null">
        #{updateOperator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shuhang.file.model.FileInfoExample" resultType="java.lang.Long">
    select count(*) from file_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.shuhang.file.model.FileInfo">
    update file_info
    <set>
      <if test="originName != null">
        origin_name = #{originName,jdbcType=VARCHAR},
      </if>
      <if test="transferName != null">
        transfer_name = #{transferName,jdbcType=VARCHAR},
      </if>
      <if test="suffix != null">
        suffix = #{suffix,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        `size` = #{size,jdbcType=INTEGER},
      </if>
      <if test="fromSource != null">
        from_source = #{fromSource,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        `path` = #{path,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createOperator != null">
        create_operator = #{createOperator,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateOperator != null">
        update_operator = #{updateOperator,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shuhang.file.model.FileInfo">
    update file_info
    set origin_name = #{originName,jdbcType=VARCHAR},
      transfer_name = #{transferName,jdbcType=VARCHAR},
      suffix = #{suffix,jdbcType=VARCHAR},
      `size` = #{size,jdbcType=INTEGER},
      from_source = #{fromSource,jdbcType=VARCHAR},
      `path` = #{path,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_operator = #{createOperator,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_operator = #{updateOperator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>